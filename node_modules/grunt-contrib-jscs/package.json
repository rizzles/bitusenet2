{
  "name": "grunt-contrib-jscs",
  "description": "A grunt task for running js-codesniffer validator",
  "version": "0.1.8",
  "homepage": "https://github.com/dsheiko/grunt-jscs",
  "author": {
    "name": "Dmitry Sheiko",
    "email": "web.sbelarus@gmail.com",
    "url": "http://dsheiko.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/dsheiko/grunt-jscs.git"
  },
  "bugs": {
    "url": "https://github.com/dsheiko/grunt-jscs/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/dsheiko/grunt-jscs/blob/master/LICENSE-MIT"
    }
  ],
  "main": "Gruntfile.js",
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "dependencies": {
    "jscodesniffer": ">=2.0.3"
  },
  "devDependencies": {
    "grunt-contrib-jshint": "~0.1.1",
    "grunt": "~0.4.1"
  },
  "peerDependencies": {
    "grunt": "~0.4.1"
  },
  "keywords": [
    "gruntplugin"
  ],
  "readme": "# grunt-jscs\r\n\r\n> A grunt task for running js-codesniffer validator\r\n\r\n## Getting Started\r\nThis plugin requires Grunt `~0.4.1`\r\n\r\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\r\n\r\n```shell\r\nnpm install grunt-jscs --save-dev\r\n```\r\n\r\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\r\n\r\n```js\r\ngrunt.loadNpmTasks( \"grunt-contrib-jscs\" );\r\n```\r\n\r\n## The \"jscs\" task\r\n\r\n### Overview\r\nIn your project's Gruntfile, add a section named `jscs` to the data object passed into `grunt.initConfig()`.\r\n\r\n```js\r\ngrunt.initConfig({\r\n\tjscs: {\r\n\t\tall: {\r\n\t\t\toptions: {\r\n\t\t\t\t// Task-specific options go here.\r\n\t\t\t},\r\n\t\t\tfiles: {\r\n\t\t\t\tsrc: [ \"dir\", \"file\", \"dir\" ] // Target-specific file/directory goes here.\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n})\r\n```\r\n\r\n### Options\r\n\r\n#### options.standard\r\nType: `String`\r\nDefault Idiomatic\r\n\r\n- apply specified standard (Idiomatic, Jquery)\r\n\r\n#### options.report\r\nType: `String`\r\nDefault 'Undefined'\r\n\r\nxml for printing an XML report\r\ncheckstyle for printing Jenkins-friendly checkstyle report\r\n\r\n#### options.report-file\r\nType: `String`\r\nDefault 'Undefined'\r\n\r\n- write the report to the specified file path\r\n\r\n### Usage Examples\r\n\r\n#### Default Options\r\n\r\n```js\r\ngrunt.initConfig({\r\n   jscs: {\r\n\t\t\tall: {\r\n\t\t\t\toptions: {\r\n\t\t\t\t\t\"standard\": \"Jquery\"\r\n\t\t\t\t},\r\n\t\t\t\tfiles: {\r\n\t\t\t\t\tsrc: [ \"tasks\" ]\r\n\t\t\t\t}\r\n\t\t\t}\r\n    }\r\n});\r\n```\r\n\r\n\r\n## Contributing\r\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\r\n\r\n[![githalytics.com alpha](https://cruel-carlota.pagodabox.com/7ddc139636e39e227c9eb4b80a2d7743 \"githalytics.com\")](http://githalytics.com/dsheiko/grunt-jscs)",
  "readmeFilename": "README.md",
  "_id": "grunt-contrib-jscs@0.1.8",
  "dist": {
    "shasum": "06a22749b2531421db4d2f219020dad9ae6fcca1"
  },
  "_from": "grunt-contrib-jscs@",
  "_resolved": "https://registry.npmjs.org/grunt-contrib-jscs/-/grunt-contrib-jscs-0.1.8.tgz"
}
